String s1="java";
String s2="java";
==> 문자열 상수 취급!! (기본자료형처럼 저장,비교)
==> 두 문자열의 내용 비교~!!
==>  s1==s2   true     ==> 값비교이기 때문에 true 출력
   s1.equals(s2)  true  ==> 권장 (내용비교)
=====================================
String s3 = new String("java");
String s4 = new String("java");
==> 두 문자열의 내용 비교~!!
==>  s3==s4   false    ==> 주소비교하기 때문에 false 출력
       s3.equals(s4)  true  ==> 권장 (내용비교)


<Array>
:앞쪽_화살표: 고정길이배열
=> 가장 기본적인 자료구조
=> 동일한 데이터 타입만 관리 가능
=> 타입이 다른 객체를 관리하기  위해 매번 다른 배열 필요


ArrayList list = {402, "gildong,Person}
	        int     String
ArrayList ==> 주소를 담는(참조변수를 담는) 배열 
// 길이가 고정되어 있기 때문에 변경하려면 처음부터 다시 명시해줘야함


<Collection Framework>
:앞쪽_화살표: 가변길이배열
=> 객체의 참조를 담는 그릇
=> 담은 때는 편리하지만 빼낼 때 Object로만 가져올 수 있음.
=> Generic을 이용하여 타입을 한정하면 형변환의 번거로움을 제거 할 수 있음.